[build-system]
requires = [ "poetry-core>=1.0.0" ]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "artipy"
version = "1.0.1"
description = ""
authors = [ "Truman Mulholland <truman.mulholland@gmail.com>" ]

[tool.poetry.dependencies]
python = ">=3.9,<4.0.0"
toml = "^0.10.2"
plotly = "^5.20.0"
pandas = "^2.2.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
python-semantic-release = "^9.4.1"
pre-commit = "^3.7.0"
mypy = "^1.9.0"
sphinx = "^7.2.6"
sphinx-rtd-theme = "^2.0.0"
ghp-import = "^2.1.0"
pylint = "^3.1.0"
black = "^24.4.0"
ruff = "^0.3.7"

[tool.black]
line-length = 88
required-version = "24.4.0"
target-version = ["py312"]

[tool.ruff]
line-length = 88
fix = true
preview = true

[tool.ruff.format]
preview = true
quote-style = "double"

[tool.ruff.lint]
preview = true
select = ["F", "E", "W", "I001"]
extend-select = [
  "D419",  # empty-docstring
  "E501",  # line-too-long
  "W291",  # trailing-whitespace
  "PLC0414",  # useless-import-alias
  "PLC2401",  # non-ascii-name
  "PLC2801",  # unnecessary-dunder-call
  "PLC3002",  # unnecessary-direct-lambda-call
  "E999",  # syntax-error
  "PLE0101",  # return-in-init
  "F706",  # return-outside-function
  "F704",  # yield-outside-function
  "PLE0115",  # nonlocal-and-global
  "PLE0116",  # continue-in-finally
  "PLE0117",  # nonlocal-without-binding
  "PLE0241",  # duplicate-bases
  "PLE0302",  # unexpected-special-method-signature
  "PLE0604",  # invalid-all-object
  "PLE0605",  # invalid-all-format
  "PLE0643",  # potential-index-error
  "PLE0704",  # misplaced-bare-raise
  "PLE1141",  # dict-iter-missing-items
  "PLE1142",  # await-outside-async
  "PLE1205",  # logging-too-many-args
  "PLE1206",  # logging-too-few-args
  "PLE1307",  # bad-string-format-type
  "PLE1310",  # bad-str-strip-call
  "PLE1507",  # invalid-envvar-value
  "PLE1519",  # singledispatch-method
  "PLE1520",  # singledispatchmethod-function
  "PLE2502",  # bidirectional-unicode
  "PLE2510",  # invalid-character-backspace
  "PLE2512",  # invalid-character-sub
  "PLE2513",  # invalid-character-esc
  "PLE2514",  # invalid-character-nul
  "PLE2515",  # invalid-character-zero-width-space
  "PLE4703",  # modified-iterating-set
  "PLW0108",  # unnecessary-lambda
  "PLW0127",  # self-assigning-variable
  "PLW0128",  # redeclared-assigned-name
  "PLW0129",  # assert-on-string-literal
  "B033",  # duplicate-value
  "PLW0131",  # named-expr-without-context
  "PLW0211",  # bad-staticmethod-argument
  "PLW0245",  # super-without-brackets
  "PLW0602",  # global-variable-not-assigned
  "PLW0604",  # global-at-module-level
  "F401",  # unused-import
  "F841",  # unused-variable
  "E722",  # bare-except
  "PLW0711",  # binary-op-exception
  "PLW1501",  # bad-open-mode
  "PLW1508",  # invalid-envvar-default
  "PLW1509",  # subprocess-popen-preexec-fn
  "PLW1514",  # unspecified-encoding
  "PLW2101",  # useless-with-lock
  "PLW3301",  # nested-min-max
]
ignore = [
  "PLR0124",  # comparison-with-itself
  "PLR0202",  # no-classmethod-decorator
  "PLR0203",  # no-staticmethod-decorator
  "UP004",  # useless-object-inheritance
  "PLR0206",  # property-with-parameters
  "PLR0904",  # too-many-public-methods
  "PLR0911",  # too-many-return-statements
  "PLR0912",  # too-many-branches
  "PLR0913",  # too-many-arguments
  "PLR0914",  # too-many-locals
  "PLR0915",  # too-many-statements
  "PLR0916",  # too-many-boolean-expressions
  "PLR0917",  # too-many-positional
  "PLR1702",  # too-many-nested-blocks
  "PLR1704",  # redefined-argument-from-local
  "PLR1711",  # useless-return
  "C416",  # unnecessary-comprehension
  "PLR1733",  # unnecessary-dict-index-lookup
  "PLR1736",  # unnecessary-list-index-lookup
  "PLW0120",  # useless-else-on-loop
  "PLW0406",  # import-self
  "PLW0603",  # global-statement
]

[tool.pytest.ini_options]
minversion = "8.0.0"
testpaths = [ "tests/" ]

[tool.isort]
profile = "black"
src_paths = [ "src/", "tests/" ]

[tool.semantic_release]
version_variable = [ "src/artipy/__init__.py:__version__" ]
version_toml = [ "pyproject.toml:tool.poetry.version" ]
build_command = "poetry build"
version_source = "tag"
commit_version_number = true
commit_message = "chore(release): v{version} [skip ci]"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
ignore_missing_imports = true
exclude = [ "tests/" ]